{"version":3,"sources":["components/Editor.js","utils/mdConverter.js","constants/index.js","actions/index.js","containers/Editor.js","components/Header.js","containers/Header.js","components/ResultCode.js","components/ResultFrame.js","containers/ResultWrap.js","components/Settings.js","containers/Settings.js","components/App.js","serviceWorker.js","reducers/editor.js","store.js","index.js"],"names":["Editor","onEditorChange","text","_this","props","changeText","onEditorMount","editor","model","getModel","value","getValue","updateOptions","tabSize","react_default","a","createElement","lib_default","language","theme","defaultValue","this","defaultText","options","selectOnLineNumbers","renderWhitespace","wordWrap","automaticLayout","editorDidMount","onChange","debounce","PureComponent","tp","Typograf","locale","disableRule","classMap","table","bindings","Object","keys","map","key","regex","RegExp","concat","replace","type","hrefs","wn","href","tabs","tab","mdConverter","markdown","settings","extensions","toConsumableArray","addIdToLink","push","convertHljs","showdownHighlight","html","showdown","Converter","omitExtraWLInCodeBlocks","rawHeaderId","parseImgDimensions","strikethrough","tasklists","emoji","simpleLineBreaks","customizedHeaderId","disableForced4SpacesIndentedSublists","ghCompatibleHeaderId","addHeaderId","headerLevelStart","levelHeader","requireSpaceBeforeHeadingText","tables","makeHtml","typographyHtml","execute","beautify","indent_size","Tabs","code","frame","setMarkup","createAction","changeTab","toggleShowSettings","changeLevelTitle","dispatch","getState","payload","mapDispatchToProps","connect","state","StyledSettingsBtn","styled","button","_templateObject","currentTab","_ref","Fragment","className","ButtonGroup","it","Button","variant","active","onClick","evt","target","textContent","md","Textarea","textarea","ResultCode_templateObject","ResultCode","readOnly","bootstrapStyle","document","hljsStyles","innerText","bootstrapRawStyles","hljsRawStyles","ResultFrame","React","createRef","current","contentWindow","querySelector","appendChild","innerHTML","frameBorder","width","height","title","ref","ResultWrap","_this$props","CurrentElement","Component","Settings","show","changeSettings","onSettingsChange","name","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Check","label","id","checked","Label","Control","as","rawText","showSettings","ApplicationWrap","div","App_templateObject","App","containers_Header","containers_Editor","containers_ResultWrap","containers_Settings","Boolean","window","location","hostname","match","editorReducer","createReducer","_createReducer","defineProperty","action","store","configureStore","reducer","ReactDOM","render","Provider","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6360264b.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport { debounce } from \"lodash\";\n\nexport default class Editor extends PureComponent {\n  onEditorChange = text => {\n    this.props.changeText(text);\n  };\n\n  onEditorMount = editor => {\n    const model = editor.getModel();\n    const value = model.getValue();\n    model.updateOptions({ tabSize: 2 });\n    this.props.changeText(value);\n  };\n\n  render() {\n    const options = {\n      selectOnLineNumbers: true,\n      renderWhitespace: \"all\",\n      wordWrap: \"bounded\",\n      automaticLayout: true\n    };\n\n    return (\n      <MonacoEditor\n        language=\"markdown\"\n        theme=\"vs-dark\"\n        defaultValue={this.props.defaultText}\n        options={options}\n        editorDidMount={this.onEditorMount}\n        onChange={debounce(this.onEditorChange, 1000)}\n      />\n    );\n  }\n}\n","import beautify from \"js-beautify\";\nimport showdown from \"showdown\";\nimport Typograf from \"typograf\";\nimport showdownHighlight from \"showdown-highlight\";\n\nconst tp = new Typograf({ locale: [\"ru\", \"en-US\"] });\ntp.disableRule(\"common/punctuation/hellip\");\n\nconst classMap = {\n  table: \"table table-striped table-bordered\"\n};\n\nconst bindings = Object.keys(classMap).map(key => ({\n  regex: new RegExp(`<${key}(.*)>`, \"g\"),\n  replace: `<${key} class=\"${classMap[key]}\" $1>`,\n  type: \"output\"\n}));\n\nconst hrefs = () => ({\n  regex: /<a href=\"#(.+)\">/g,\n  replace: (wn, href) => {\n    return `<a href=\"#${href}\" id=\"${href}\">`;\n  },\n  type: \"output\"\n});\n\nconst tabs = () => ({\n  regex: /<p>(###[\\w-]+)<\\/p>/g,\n  replace: (wn, tab) => tab,\n  type: \"output\"\n});\n\nconst mdConverter = (markdown, settings) => {\n  const extensions = [...bindings, tabs];\n\n  if (settings.addIdToLink) {\n    extensions.push(hrefs);\n  }\n\n  if (settings.convertHljs) {\n    extensions.push(showdownHighlight);\n  }\n\n  const converter = new showdown.Converter({\n    omitExtraWLInCodeBlocks: true,\n    rawHeaderId: true,\n    parseImgDimensions: true,\n    strikethrough: true,\n    tasklists: true,\n    emoji: true,\n    simpleLineBreaks: true,\n    customizedHeaderId: true,\n    disableForced4SpacesIndentedSublists: true,\n    extensions,\n    ghCompatibleHeaderId: settings.addHeaderId,\n    headerLevelStart: settings.levelHeader,\n    requireSpaceBeforeHeadingText: true,\n    tables: true\n  });\n\n  const html = converter.makeHtml(markdown);\n  const typographyHtml = tp.execute(html);\n  return beautify.html(typographyHtml, { indent_size: 2 });\n};\n\nexport default mdConverter;\n","export const Tabs = {\n  code: \"Код\",\n  frame: \"Предпросмотр\"\n};\nexport const CONVERT_HLJS = \"CONVERT_HLJS\";\nexport const HEADER_LEVEL = \"HEADER_LEVEL\";\nexport const ADD_HEADER_ID = \"ADD_HEADER_ID\";\nexport const ADD_ID_TO_LINK = \"ADD_ID_TO_LINK\";\n\nexport const defaultText = `# Заголовок\n\n- Список\n  1. Вложенный список\n\n      \\`\\`\\`html\n      <div>Вложенная вёрстка</div>\n      \\`\\`\\`\n\n      \\`\\`\\`js\n      // Вложенный JS\n      const sum = (a, b) => {\n        return a + b;\n      }\n      \\`\\`\\`\n  2. Второй элемент\n\n###big-trip\n\nВыше - разделитель для заданий. Итоговый код прогоняется через типограф, поэтому пробелы и тире в тексте правильные. Также готовый HTML код прогоняется через бьютифаер, чтобы не было каши.\n`;\n","import { createAction } from \"redux-starter-kit\";\nimport mdConverter from \"../utils/mdConverter\";\nimport {\n  ADD_HEADER_ID,\n  ADD_ID_TO_LINK,\n  CONVERT_HLJS,\n  HEADER_LEVEL\n} from \"../constants\";\n\nexport const setMarkup = createAction(\"CHANGE_TEXT\");\nexport const changeTab = createAction(\"CHANGE_TAB\");\nexport const toggleShowSettings = createAction(\"TOGGLE_SHOW_SETTINGS\");\nexport const changeLevelTitle = createAction(\"CHANGE_LEVEL_TITLE\");\nexport const convertHljs = createAction(CONVERT_HLJS);\nexport const addHeaderId = createAction(ADD_HEADER_ID);\nexport const addIdToLink = createAction(ADD_ID_TO_LINK);\n\nexport const changeSettings = ({ name, value }) => (dispatch, getState) => {\n  switch (name) {\n    case CONVERT_HLJS:\n      dispatch(convertHljs());\n      break;\n    case HEADER_LEVEL:\n      dispatch(changeLevelTitle(value));\n      break;\n    case ADD_HEADER_ID:\n      dispatch(addHeaderId());\n      break;\n    case ADD_ID_TO_LINK:\n      dispatch(addIdToLink());\n      break;\n    default:\n      break;\n  }\n\n  const { rawText } = getState();\n\n  dispatch(changeText(rawText));\n};\n\nexport const changeText = text => (dispatch, getState) => {\n  const { settings } = getState();\n\n  dispatch({ type: \"SAVE_RAW_TEXT\", payload: text });\n  dispatch(setMarkup(mdConverter(text, settings)));\n};\n","import Editor from \"../components/Editor\";\nimport { connect } from \"react-redux\";\nimport { changeText } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  defaultText: state.defaultText\n});\n\nconst mapDispatchToProps = {\n  changeText\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { Tabs } from \"../constants\";\nimport { MdSettings } from \"react-icons/md\";\n\nconst StyledSettingsBtn = styled.button`\n  cursor: pointer;\n`;\n\nexport default function Header({ currentTab, changeTab, toggleShowSettings }) {\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2 className=\"text-center mt-3\">Конвертер из MD в HTML</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-6\" />\n        <div className=\"col-6 d-flex flex-row mb-3 ml-auto\">\n          <ButtonGroup className=\"ml-auto\">\n            {Object.keys(Tabs).map(it => (\n              <Button\n                variant=\"secondary\"\n                active={Tabs[it] === currentTab}\n                onClick={evt => {\n                  changeTab(evt.target.textContent);\n                }}\n                key={Tabs[it]}\n              >\n                {Tabs[it]}\n              </Button>\n            ))}\n          </ButtonGroup>\n          <StyledSettingsBtn\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => toggleShowSettings()}\n          >\n            <MdSettings />\n          </StyledSettingsBtn>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import { changeTab, toggleShowSettings } from \"../actions\";\nimport Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => ({\n  currentTab: state.currentTab\n});\n\nconst mapDispatchToProps = {\n  changeTab,\n  toggleShowSettings\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  flex-grow: 1;\n  resize: none;\n`;\n\nconst ResultCode = ({ text }) => {\n  return <Textarea readOnly className=\"form-control\" value={text} />;\n};\n\nexport default ResultCode;\n","import React, { PureComponent } from \"react\";\n// eslint-disable-next-line\nimport bootstrapRawStyles from \"!!raw-loader!bootstrap/dist/css/bootstrap.min.css\";\n// eslint-disable-next-line\nimport hljsRawStyles from \"!!raw-loader!highlight.js/styles/github.css\";\n\nconst bootstrapStyle = document.createElement(\"style\");\nconst hljsStyles = document.createElement(\"style\");\nbootstrapStyle.innerText = bootstrapRawStyles;\nhljsStyles.innerText = hljsRawStyles;\n\nclass ResultFrame extends PureComponent {\n  frame = React.createRef();\n\n  componentDidMount() {\n    const frame = this.frame.current.contentWindow.document;\n    frame.querySelector(\"head\").appendChild(bootstrapStyle);\n    frame.querySelector(\"head\").appendChild(hljsStyles);\n    frame.querySelector(\"body\").innerHTML = this.props.text;\n  }\n\n  componentDidUpdate() {\n    this.frame.current.contentWindow.document.querySelector(\n      \"body\"\n    ).innerHTML = this.props.text;\n  }\n\n  render() {\n    return (\n      <iframe\n        frameBorder={0}\n        width=\"100%\"\n        height=\"100%\"\n        title=\"result\"\n        ref={this.frame}\n      />\n    );\n  }\n}\n\nexport default ResultFrame;\n","import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport ResultCode from \"../components/ResultCode\";\nimport { Tabs } from \"../constants\";\nimport ResultFrame from \"../components/ResultFrame\";\n\nconst mapStateToProps = state => ({\n  text: state.text,\n  currentTab: state.currentTab\n});\n\nclass ResultWrap extends Component {\n  state = {\n    [Tabs.code]: ResultCode,\n    [Tabs.frame]: ResultFrame\n  };\n\n  render() {\n    let { text, currentTab } = this.props;\n    const CurrentElement = this.state[currentTab];\n\n    return (\n      <React.Fragment>\n        <CurrentElement text={text} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(ResultWrap);\n","import React from \"react\";\n\nimport { Form, Modal } from \"react-bootstrap\";\nimport {\n  ADD_HEADER_ID,\n  ADD_ID_TO_LINK,\n  CONVERT_HLJS,\n  HEADER_LEVEL\n} from \"../constants\";\n\nconst Settings = ({ show, settings, changeSettings, toggleShowSettings }) => {\n  const onSettingsChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value;\n\n    changeSettings({ name, value });\n  };\n\n  return (\n    <Modal show={show} onHide={toggleShowSettings}>\n      <Modal.Header closeButton>\n        <Modal.Title>Настройки</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Добавить hljs\"\n              name={CONVERT_HLJS}\n              id={CONVERT_HLJS}\n              value={settings.convertHljs}\n              checked={settings.convertHljs}\n              onChange={onSettingsChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Добавлять якорь ко всем заголовкам\"\n              name={ADD_HEADER_ID}\n              id={ADD_HEADER_ID}\n              value={settings.addHeaderId}\n              checked={settings.addHeaderId}\n              onChange={onSettingsChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Добавлять id к якорным ссылкам\"\n              name={ADD_ID_TO_LINK}\n              id={ADD_ID_TO_LINK}\n              value={settings.addIdToLink}\n              checked={settings.addIdToLink}\n              onChange={onSettingsChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Начинать с уровня заголовка:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={settings.levelHeader}\n              name={HEADER_LEVEL}\n              onChange={onSettingsChange}\n            >\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { toggleShowSettings, changeSettings } from \"../actions\";\nimport Settings from \"../components/Settings\";\n\nconst mapStateToProps = state => ({\n  show: state.showSettings,\n  settings: state.settings\n});\nconst mapDispatchToProps = {\n  toggleShowSettings,\n  changeSettings\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Settings);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Editor from \"../containers/Editor\";\nimport Header from \"../containers/Header\";\nimport ResultWrap from \"../containers/ResultWrap\";\nimport Settings from \"../containers/Settings\";\n\nconst ApplicationWrap = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ApplicationWrap className=\"container-fluid\">\n        <Header />\n        <div className=\"row flex-grow-1 pb-3\">\n          <div className=\"col-6\">\n            <Editor />\n          </div>\n          <div className=\"col-6 d-flex\">\n            <ResultWrap />\n          </div>\n        </div>\n        <Settings />\n      </ApplicationWrap>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer } from \"redux-starter-kit\";\nimport {\n  addHeaderId,\n  addIdToLink,\n  changeLevelTitle,\n  changeTab,\n  convertHljs,\n  setMarkup,\n  toggleShowSettings\n} from \"../actions\";\nimport { defaultText, Tabs } from \"../constants\";\n\nconst editorReducer = createReducer(\n  {\n    text: \"\",\n    rawText: \"\",\n    defaultText,\n    currentTab: Tabs.code,\n    showSettings: false,\n    settings: {\n      convertHljs: false,\n      levelHeader: 3,\n      addHeaderId: false,\n      addIdToLink: true\n    }\n  },\n  {\n    [setMarkup]: (state, action) => {\n      state.text = action.payload;\n      return state;\n    },\n    [changeTab]: (state, action) => {\n      state.currentTab = action.payload;\n    },\n    [toggleShowSettings]: state => {\n      state.showSettings = !state.showSettings;\n    },\n    [convertHljs]: state => {\n      state.settings.convertHljs = !state.settings.convertHljs;\n    },\n    [changeLevelTitle]: (state, action) => {\n      state.settings.levelHeader = action.payload;\n    },\n    [addHeaderId]: state => {\n      state.settings.addHeaderId = !state.settings.addHeaderId;\n    },\n    [addIdToLink]: state => {\n      state.settings.addIdToLink = !state.settings.addIdToLink;\n    },\n    SAVE_RAW_TEXT: (state, action) => {\n      state.rawText = action.payload;\n    }\n  }\n);\n\nexport default editorReducer;\n","import { configureStore } from \"redux-starter-kit\";\nimport editorReducer from \"./reducers/editor\";\n\nconst store = configureStore({\n  reducer: editorReducer\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}