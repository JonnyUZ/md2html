{"version":3,"sources":["components/Editor.js","actions/index.js","containers/Editor.js","constants/index.js","containers/Header.js","components/Header.js","components/ResultCode.js","utils/mdConverter.js","components/ResultFrame.js","containers/ResultWrap.js","components/App.js","serviceWorker.js","reducers/editor.js","store.js","index.js"],"names":["Editor","onEditorChange","text","_this","props","changeText","onEditorMount","editor","model","getModel","value","getValue","updateOptions","tabSize","react_default","a","createElement","lib_default","language","theme","defaultValue","this","defaultText","options","selectOnLineNumbers","renderWhitespace","wordWrap","automaticLayout","editorDidMount","onChange","debounce","PureComponent","createAction","changeTab","mapDispatchToProps","connect","state","Tabs","code","frame","currentTab","_ref","Fragment","className","ButtonGroup","Object","keys","map","it","Button","variant","active","onClick","evt","target","textContent","key","Textarea","styled","textarea","_templateObject","ResultCode","readOnly","tp","Typograf","locale","disableRule","classMap","table","bindings","regex","RegExp","concat","replace","type","converter","showdown","Converter","customizedHeaderId","disableForced4SpacesIndentedSublists","extensions","toConsumableArray","wn","href","tab","showdownHighlight","ghCompatibleHeaderId","headerLevelStart","requireSpaceBeforeHeadingText","tables","mdConverter","markdown","html","makeHtml","typographyHtml","execute","beautify","indent_size","ResultFrame","React","createRef","current","contentWindow","document","querySelector","innerHTML","frameBorder","width","height","title","ref","ResultWrap","_this$props","CurrentElement","Component","ApplicationWrap","div","App_templateObject","App","containers_Header","containers_Editor","containers_ResultWrap","Boolean","window","location","hostname","match","editorReducer","createReducer","_createReducer","defineProperty","action","payload","store","configureStore","reducer","ReactDOM","render","Provider","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfed0c87.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport { debounce } from \"lodash\";\n\nexport default class Editor extends PureComponent {\n  onEditorChange = text => {\n    this.props.changeText(text);\n  };\n\n  onEditorMount = editor => {\n    const model = editor.getModel();\n    const value = model.getValue();\n    model.updateOptions({ tabSize: 2 });\n    this.props.changeText(value);\n  };\n\n  render() {\n    const options = {\n      selectOnLineNumbers: true,\n      renderWhitespace: \"all\",\n      wordWrap: \"bounded\",\n      automaticLayout: true\n    };\n\n    return (\n      <MonacoEditor\n        language=\"markdown\"\n        theme=\"vs-dark\"\n        defaultValue={this.props.defaultText}\n        options={options}\n        editorDidMount={this.onEditorMount}\n        onChange={debounce(this.onEditorChange, 1000)}\n      />\n    );\n  }\n}\n","import { createAction } from \"redux-starter-kit\";\n\nexport const changeText = createAction(\"CHANGE_TEXT\");\nexport const changeTab = createAction(\"CHANGE_TAB\");\n","import Editor from \"../components/Editor\";\nimport { connect } from \"react-redux\";\nimport { changeText } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  defaultText: state.defaultText\n});\n\nconst mapDispatchToProps = {\n  changeText\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","export const Tabs = {\n  code: \"Код\",\n  frame: \"Предпросмотр\"\n};\n","import { changeTab } from \"../actions\";\nimport Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => ({\n  currentTab: state.currentTab\n});\n\nconst mapDispatchToProps = {\n  changeTab\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport { Tabs } from \"../constants\";\n\nexport default function Header({ currentTab, changeTab }) {\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2 className=\"text-center mt-3\">Конвертер из MD в HTML</h2>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-6 d-flex flex-column mb-3 ml-auto\">\n          <ButtonGroup className=\"ml-auto\">\n            {Object.keys(Tabs).map(it => (\n              <Button\n                variant=\"secondary\"\n                active={Tabs[it] === currentTab}\n                onClick={evt => {\n                  changeTab(evt.target.textContent);\n                }}\n                key={Tabs[it]}\n              >\n                {Tabs[it]}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  flex-grow: 1;\n  resize: none;\n`;\n\nconst ResultCode = ({ text }) => {\n  return <Textarea readOnly className=\"form-control\" value={text} />;\n};\n\nexport default ResultCode;\n","import beautify from \"js-beautify\";\nimport showdown from \"showdown\";\nimport Typograf from \"typograf\";\nimport showdownHighlight from \"showdown-highlight\";\n\nconst tp = new Typograf({ locale: [\"ru\", \"en-US\"] });\ntp.disableRule(\"common/punctuation/hellip\");\n\nconst classMap = {\n  table: \"table table-striped table-bordered\"\n};\n\nconst bindings = Object.keys(classMap).map(key => ({\n  regex: new RegExp(`<${key}(.*)>`, \"g\"),\n  replace: `<${key} class=\"${classMap[key]}\" $1>`,\n  type: \"output\"\n}));\n\nconst hrefs = () => ({\n  regex: /<a href=\"#(.+)\">/g,\n  replace: (wn, href) => {\n    return `<a href=\"#${href}\" id=\"${href}\">`;\n  },\n  type: \"output\"\n});\n\nconst tabs = () => ({\n  regex: /<p>(###[\\w\\-]+)<\\/p>/g,\n  replace: (wn, tab) => tab,\n  type: \"output\"\n});\n\nconst converter = new showdown.Converter({\n  customizedHeaderId: true,\n  disableForced4SpacesIndentedSublists: true,\n  extensions: [...bindings, hrefs, tabs, showdownHighlight],\n  ghCompatibleHeaderId: true,\n  headerLevelStart: 3,\n  requireSpaceBeforeHeadingText: true,\n  tables: true\n});\n\nconst mdConverter = markdown => {\n  const html = converter.makeHtml(markdown);\n  const typographyHtml = tp.execute(html);\n  return beautify.html(typographyHtml, { indent_size: 2 });\n};\n\nexport default mdConverter;\n","import React, { PureComponent } from \"react\";\n\nconst bootstrapLink = `<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">`;\nconst hljsLink = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/github.min.css\">`;\nclass ResultFrame extends PureComponent {\n  frame = React.createRef();\n\n  componentDidMount() {\n    const frame = this.frame.current.contentWindow.document;\n    frame.querySelector(\"head\").innerHTML = `${bootstrapLink} ${hljsLink}`;\n    frame.querySelector(\"body\").innerHTML = this.props.text;\n  }\n\n  componentDidUpdate() {\n    this.frame.current.contentWindow.document.querySelector(\n      \"body\"\n    ).innerHTML = this.props.text;\n  }\n\n  render() {\n    return (\n      <iframe\n        frameBorder={0}\n        width=\"100%\"\n        height=\"100%\"\n        title=\"result\"\n        ref={this.frame}\n      />\n    );\n  }\n}\n\nexport default ResultFrame;\n","import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport ResultCode from \"../components/ResultCode\";\nimport mdConverter from \"../utils/mdConverter\";\nimport { Tabs } from \"../constants\";\nimport ResultFrame from \"../components/ResultFrame\";\n\nconst mapStateToProps = state => ({\n  text: state.text,\n  currentTab: state.currentTab\n});\n\nclass ResultWrap extends Component {\n  state = {\n    [Tabs.code]: ResultCode,\n    [Tabs.frame]: ResultFrame\n  };\n\n  render() {\n    let { text, currentTab } = this.props;\n    text = mdConverter(text);\n    const CurrentElement = this.state[currentTab];\n\n    return (\n      <React.Fragment>\n        <CurrentElement text={text} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(ResultWrap);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Editor from \"../containers/Editor\";\nimport Header from \"../containers/Header\";\nimport ResultWrap from \"../containers/ResultWrap\";\n\nconst ApplicationWrap = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ApplicationWrap className=\"container-fluid\">\n        <Header />\n        <div className=\"row flex-grow-1 pb-3\">\n          <div className=\"col-6\">\n            <Editor />\n          </div>\n          <div className=\"col-6 d-flex\">\n            <ResultWrap />\n          </div>\n        </div>\n      </ApplicationWrap>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer } from \"redux-starter-kit\";\nimport { changeTab, changeText } from \"../actions\";\nimport { Tabs } from \"../constants\";\n\nconst defaultText = `# Заголовок\n\n- Список\n  1. Вложенный список\n\n      \\`\\`\\`html\n      <div>Вложенная вёрстка</div>\n      \\`\\`\\`\n\n      \\`\\`\\`js\n      // Вложенный JS\n      const sum = (a, b) => {\n        return a + b;\n      }\n      \\`\\`\\`\n  2. Второй элемент\n\n###big-trip\n\nВыше - разделитель для заданий. Итоговый код прогоняется через типограф, поэтому пробелы и тире в тексте правильные. Также готовый HTML код прогоняется через бьютифаер, чтобы не было каши.\n`;\n\nconst editorReducer = createReducer(\n  {\n    text: \"\",\n    defaultText,\n    currentTab: Tabs.code\n  },\n  {\n    [changeText]: (state, action) => {\n      state.text = action.payload;\n      return state;\n    },\n    [changeTab]: (state, action) => {\n      state.currentTab = action.payload;\n    }\n  }\n);\n\nexport default editorReducer;\n","import { configureStore } from \"redux-starter-kit\";\nimport editorReducer from \"./reducers/editor\";\n\nconst store = configureStore({\n  reducer: editorReducer\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}